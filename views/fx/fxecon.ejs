<!DOCTYPE html>
<html lang="en">
<%- include('../head.ejs',{page_name:'Forex'}) %>
<body>
  <%- include('../hotStyles.ejs') %>
  <!-- Loader -->
  <div id="loading">
    <img id="loading-image" src="/img/Gordon.gif" alt="Loading..." />
  </div>
  <!-- HEADER BEGIN -->
  <%- include('../menus/headerMenu.ejs',{user}) %>
  <!-- HEADER END -->
  <div class="d-flex align-items-stretch">
    <nav id="sidebar">
      <%- include('../menus/menu.ejs',{device:'pc'}) %>
    </nav>
    <div class="page-content" style="padding-bottom:70px;">
      <div class="page-header">
        <div class="container-fluid">
          <h2 class="h5 no-margin-bottom">Dữ liệu kinh tế <%- countryName %></h2>
        </div>
      </div>

      <section>
        <div class="container-fluid">
          <p class="text-danger">Giao diện mẫu đang phát triển, các thông tin chỉ mang tính minh họa</p>

            <!-- Policy target block begin -->
            <div class="row">
              <div class="col-lg-6 col-12 mx-auto">
                <div class="block">
                  <div class="row-title">
                    Policy target
                  </div>
                  <div class="container-fluid">
                    <div class="row">
                      <div class="col-12">
                        <% for(var i=0; i<endoIndicators.length; i++) { %>
                          <% if(endoIndicators[i].type=="target") { %>
                            <div class="btn btn-success" id="<%- endoIndicators[i].code %>" style="width:100%" onclick="openIndicator('<%- endoIndicators[i].code %>')"><%- endoIndicators[i].name %></div>
                          <% } %>
                        <% } %>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <!-- Policy target block end -->

            <!-- Leading indicators block begin -->
            <div class="row">
              <div class="col-lg-6 col-12 mx-auto">
                <div class="block">
                  <div class="row-title">
                    Leading indicators
                  </div>
                  <div class="container-fluid">
                    <div class="row">
                      <div class="col-12">
                        <% for(var i=0; i<endoIndicators.length; i++) { %>
                          <% if(endoIndicators[i].type=="leading") { %>
                            <div class="btn btn-danger" id="<%- endoIndicators[i].code %>" style="width:100%" onclick="openIndicator('<%- endoIndicators[i].code %>')"><%- endoIndicators[i].name %></div>
                          <% } %>
                        <% } %>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <!-- Leading indicators block end -->

            <!-- Coincident indicators block begin -->
            <div class="row">
              <div class="col-lg-6 col-12">
                <div class="block">
                  <div class="row-title">
                    Coincident indicators
                  </div>
                  <div class="container-fluid">
                    <div class="row">
                      <div class="col-12">
                        <% for(var i=0; i<endoIndicators.length; i++) { %>
                          <% if(endoIndicators[i].type=="coincident") { %>
                            <div class="btn btn-warning" id="<%- endoIndicators[i].code %>" style="width:100%" onclick="openIndicator('<%- endoIndicators[i].code %>')"><%- endoIndicators[i].name %></div>
                          <% } %>
                        <% } %>
                      </div>
                    </div>
                  </div>
                </div>
              </div>

              <div class="col-lg-6 col-12">
                <div class="block">
                  <div class="row-title">
                    Policy reactions
                  </div>
                  <div class="container-fluid">
                    <div class="row">
                      <div class="col-12">
                        <% for(var i=0; i<endoIndicators.length; i++) { %>
                          <% if(endoIndicators[i].type=="reaction") { %>
                            <div class="btn btn-warning" id="<%- endoIndicators[i].code %>" style="width:100%" onclick="openIndicator('<%- endoIndicators[i].code %>')"><%- endoIndicators[i].name %></div>
                          <% } %>
                        <% } %>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <!-- Coincident indicators block end -->

            <!-- Lagging indicators block begin -->
            <div class="row">
              <div class="col-lg-6 col-12 mx-auto">
                <div class="block">
                  <div class="row-title">
                    Lagging indicators
                  </div>
                  <div class="container-fluid">
                    <div class="row">
                      <div class="col-12">
                        <% for(var i=0; i<endoIndicators.length; i++) { %>
                          <% if(endoIndicators[i].type=="lagging") { %>
                            <div class="btn btn-secondary" id="<%- endoIndicators[i].code %>" style="width:100%" onclick="openIndicator('<%- endoIndicators[i].code %>')"><%- endoIndicators[i].name %></div>
                          <% } %>
                        <% } %>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <!-- Lagging indicators block end -->

        </div>

      </section>

      <!-- Indicator window begin -->
        <div class="overlay overlay-dark" id="indicatorWindowWrapper" style="display:none;">
          <div>
            <div class="modal-content welcome-content client-form-content" style="width:90%;height:90vh;margin:15px auto;">
              <div class="modal-header d-flex justify-content-center">
                <h3 class="heading" id="indicatorWindowHeading"></h3>
              </div>
              <div class="modal-body" style="max-height:100% !important;">
                <div id="indicatorWindowTabs">
                  <div class="btn btn-primary" id="indicatorWindowTab-0" onclick="indicatorTab(0)">Biểu đồ</div>
                  <div class="btn btn-secondary" id="indicatorWindowTab-2" onclick="indicatorTab(1)">Dữ liệu</div>
                </div>
                <div id="indicatorTabContent">
                  <div id="indicatorTabContent-0" style="display:block;">
                    <!-- Tab 0 begin -->
                    <div class="container-fluid mt-1">
                      <div class="row">
                        <div class="col-12">
                          <div class="block">
                            <div id="indicatorChart" class="block-content">
                              <p class="text-secondary">Loading...</p>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                    <!-- Tab 0 end -->
                  </div>

                  <div id="indicatorTabContent-1" style="display:none;">
                    <!-- Tab 1 begin -->
                    <div class="containter-fluid mt-1">
                      <div class="row">
                        <div class="col-lg-6 col-12">
                          <div class="block">
                            <!-- Data table begin -->
                            <div id="indiDataTable" class='block-content' style="height:400px;overflow:auto;"></div>
                            <!-- Data table end -->
                          </div>
                        </div>
                        <div class="col-lg-6 col-12">
                          <div class="block">
                            <div class="row-title">
                              <div class="btn btn-primary" id="indicatorInputToggle" onclick="indicatorEnableForm('input')">Nhập dữ liệu</div>
                              <% if(user.role_id ==2 ) { %>
                              <div class="btn btn-secondary" id="indicatorEditToggle" onclick="indicatorEnableForm('edit')">Sửa dữ liệu</div>
                              <% } %>
                            </div>
                            <!-- Data input form begin -->
                            <form action="" id="indicatorInputForm" style="display:block">
                              <!-- Indicator info begin -->
                              <div id="indiInfo" class="mt-3 mb-3"></div>
                              <!-- Indicator info end -->
                              <div class="container-fluid">
                                <div class="row">
                                  <div class="col-12">
                                    <label>Ngày</label>
                                    <input type="date" id="indicatorInputDate" class="form-control" name="indiDate" placeholder="">
                                  </div>
                                  <div class="col-12">
                                    <label>Giá trị</label>
                                    <input type="text" id="indicatorInputValue" class="form-control" name="indiVal" placeholder="">
                                  </div>
                                  <div class="col-12 text-center">
                                    <div class="btn btn-success" id="applyInputBtn">Nhập</div>
                                  </div>
                                </div>
                              </div>
                            </form>
                            <!-- Data input form end -->
                            <!-- Data edit form begin -->
                            <% if(user.role_id ==2 ) { %>
                            <form action="" id="indicatorEditForm" style="display:none">
                              <div class="container-fluid">
                                <div class="row">
                                  <div class="col-6">
                                    <div class="container">
                                      <div class="row">
                                        <div class="col-12">
                                          <label>Ngày cũ</label>
                                          <input type="date" id="indicatorEditOldDate" class="form-control" name="indiOldDate" placeholder="">
                                        </div>
                                        <div class="col-12">
                                          <label>Giá trị cũ</label>
                                          <input type="text" id="indicatorEditOldValue" class="form-control" name="indiOldVal" placeholder="">
                                        </div>
                                      </div>
                                    </div>
                                  </div>
                                  <div class="col-6">
                                    <div class="container">
                                      <div class="row">
                                        <div class="col-12">
                                          <label>Ngày mới</label>
                                          <input type="date" id="indicatorEditNewDate" class="form-control" name="indiNewDate" placeholder="">
                                        </div>
                                        <div class="col-12">
                                          <label>Giá trị mới</label>
                                          <input type="text" id="indicatorEditNewValue" class="form-control" name="indiNewVal" placeholder="">
                                        </div>
                                      </div>
                                    </div>
                                  </div>
                                  <div class="col-12 text-center">
                                    <div class="btn btn-warning" id="applyEditBtn">Sửa</div>
                                  </div>
                                </div>
                              </div>
                            </form>
                            <% } %>
                            <!-- Data edit form end -->
                          </div>
                        </div>
                      </div>
                    </div>
                    <!-- Tab 1 end -->
                  </div>
                </div>
              </div>
              <div class="modal-footer d-flex justify-content-center">
                <span id="indicatorWindowClose" class="btn btn-danger" onclick="closeIndicatorWindow()">Đóng</span>
              </div>
            </div>
          </div>
        </div>
      <!-- Indicator window end -->

    </div>
  </div>
</body>
<%- include ('../tail.ejs') %>
<script src="/js/favico.min.js"></script>
<script src="/js/custom-script.js"></script>
<script src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>
<script>
  function openIndicator(indicatorCode) {
    console.log(indicatorCode);
    let indicatorWindow = document.getElementById("indicatorWindowWrapper");
    try {
      updateIndiWindowTitle(indicatorCode.toUpperCase());
      indicatorWindow.style.display = "block";
      // Reset indicator window
      resetIndiWindow();
      // Fetch data
      fetch("/fx/indicator", {
        method: "POST",
        headers: {'Content-Type': 'application/json'},
        body: JSON.stringify({
          indicatorCode: indicatorCode
        })
      }).then(res => res.json())
      .then(res => {
        console.log(res);
        // Update indicator window
        updateIndiWindowData(res.indiData);
        // Update indicator info
        updateIndiInfo(res.indiInfo.freq,res.indiInfo.releaseTime,res.indiInfo.url0,res.indiInfo.url1,res.indiInfo.url2);
        // Update chart
        updateChart(indicatorCode,res.indiData);
      })
      .catch(err => {
        console.log(err);
      });
    } catch(err) {
      console.log(err);
    }
  }

  function resetIndiWindow() {
    try {
      document.getElementById('indiDataTable').innerHTML = 'loading...';
    } catch(err) {
      console.log(err);
    }
  }

  function updateIndiWindowTitle(indiTitle) {
    try {
      document.getElementById('indicatorWindowHeading').innerHTML = indiTitle;
    } catch(err) {
      console.log(err);
    }
  }

  function updateIndiInfo(freq,t,url0,url1,url2) {
    try {
      let indiInfo = "Dữ liệu được công bố <span class='text-warning'>" + freq + "</span> ";
      if (t != "") {
        indiInfo += "vào <span class='text-warning'>" + t + "</span> ";
      }
      if (url0 != "") {
        indiInfo += "tại " + "<a target='_blank' href='" + url0 + "'>Link</a>";
      }
      if (url1 != "") {
        indiInfo += ", hoặc " + "<a target='_blank' href='" + url1 + "'>Link dự phòng 1</a>";
      }
      if (url2 != "") {
        indiInfo += ", " + "<a target='_blank' href='" + url2 + "'>Link dự phòng 2</a>";
      }
      document.getElementById('indiInfo').innerHTML = indiInfo + ".";
    } catch(err) {
      console.log(err);
    }
  }

  function updateIndiWindowData(indiData) {
    let indiDataContent = '<p class="text-secondary">Chưa có dữ liệu</p>';
    if (indiData != undefined) {
      indiDataContent = '<table class="text-center" style="width:100%"><tr><th>Ngày tham chiếu</th><th>Số liệu</th>' <% if(user.role_id ==2 ) { %> + '<th></th>' <% } %> + '</tr>';
      for (var i=indiData.length-1; i>0; i--) {
        indiDataContent += '<tr><td>' + indiData[i][0] + '</td><td>' + indiData[i][1] + '</td>' <% if(user.role_id ==2 ) { %> + '<td><button class="border-0 btn-transition btn btn-outline-success clientButton" onclick="editIndi('+ "'" + indiData[i][0] + "'" + ',' + indiData[i][1] +')"></button></td>' <% } %> + '</tr>';
      }
      indiDataContent += '</table>';
    }
    try {
      document.getElementById('indiDataTable').innerHTML = indiDataContent;
    } catch(err) {
      console.log(err);
    }
  }

  function closeIndicatorWindow() {
    let indicatorWindow = document.getElementById("indicatorWindowWrapper");
    try {
      indicatorWindow.style.display = "none";
      // Delete indi Info
      document.getElementById('indiInfo').innerHTML = "";
      // Delete chart
      document.getElementById('indicatorChart').innerHTML = '<p class="text-secondary">Loading...</p>';
    } catch(err) {
      console.log(err);
    }
  }

  function editIndi(d,val) {
    //alert(d + ': ' + val);
    indicatorEnableForm('edit');
    indicatorFillForm('indicatorEditForm',{indiOldDate:d,indiOldVal:val});
  }

  function indicatorTab(id) {
    let tabs = document.getElementById("indicatorWindowTabs");
    let tabContent = document.getElementById("indicatorTabContent");
    if(tabs != null && tabContent != null) {
      //console.log(tabs.children.length);
      for(var i=0;i<tabs.children.length;i++) {
        tabs.children[i].classList.remove("btn-primary");
        tabs.children[i].classList.add("btn-secondary");
      }
      for(var i=0;i<tabContent.children.length;i++) {
        tabContent.children[i].style.display = "none";
      }
      tabs.children[id].classList.remove("btn-secondary");
      tabs.children[id].classList.add("btn-primary");
      tabContent.children[id].style.display = "block";
    }
  }

  //------------------------
  // Data form toggle
  //------------------------
  function indicatorEnableForm(formName) {
    let indicatorInputToggle = document.getElementById("indicatorInputToggle");
    let indicatorEditToggle = document.getElementById("indicatorEditToggle");
    let inputForm = document.getElementById("indicatorInputForm");
    let editForm = document.getElementById("indicatorEditForm");
    if(formName=="input") {
      try {
        inputForm.style.display = "block";
        editForm.style.display = "none";
        indicatorInputToggle.classList.add("btn-primary");
        indicatorEditToggle.classList.remove("btn-primary");
        indicatorInputToggle.classList.remove("btn-secondary");
        indicatorEditToggle.classList.add("btn-secondary");
        editForm.reset();
      } catch(err) {
        console.log(err);
      }
    }
    if(formName=="edit") {
      try {
        inputForm.style.display = "none";
        editForm.style.display = "block";
        indicatorInputToggle.classList.remove("btn-primary");
        indicatorEditToggle.classList.add("btn-primary");
        indicatorInputToggle.classList.add("btn-secondary");
        indicatorEditToggle.classList.remove("btn-secondary");
        inputForm.reset();
      } catch(err) {
        console.log(err);
      }
    }
  }
  //------------------------

  //------------------------
  // Data form fill
  //------------------------
  function indicatorFillForm(formName, data) {
    try {
      const { elements } = document.getElementById(formName);

      for (const [ key, value ] of Object.entries(data) ) {
        const field = elements.namedItem(key)
        field && (field.value = value)
      }
    } catch(err) {
      console.log(err);
    }
  }
  //------------------------

  //------------------------
  // Data submit
  //------------------------
  let applyInputBtn = document.getElementById('applyInputBtn');
  let applyEditBtn = document.getElementById('applyEditBtn');
  if (applyInputBtn != null) {
    applyInputBtn.addEventListener("click", function() {
      try {
        let inputElements = document.getElementById('indicatorInputForm').getElementsByTagName("input");
        let indiCode = document.getElementById('indicatorWindowHeading').innerHTML;
        let inputData = {
          indicatorCode: indiCode.toLowerCase(),
          action: 'input',
          date: inputElements[0].value,
          val: inputElements[1].value
        }
        console.log(inputData);
        // Send data to server
        fetch("/fx/indiupdate", {
          method: "POST",
          headers: {'Content-Type': 'application/json'},
          body: JSON.stringify(inputData)
        }).then(res => res.json())
        .then(res => {
          console.log(res);
          // Update indicator window
          //updateIndiWindowData(res.indiData);
        })
        .catch(err => {
          console.log(err);
        });
      } catch(err) {
        console.log(err);
      }
    });
  }

  if (applyEditBtn != null) {
    applyEditBtn.addEventListener("click", function() {
      try {
        let editElements = document.getElementById('indicatorEditForm').getElementsByTagName("input");
        let indiCode = document.getElementById('indicatorWindowHeading').innerHTML;
        let editData = {
          indicatorCode: indiCode.toLowerCase(),
          action: 'edit',
          oldDate: editElements[0].value,
          oldVal: editElements[1].value,
          newDate: editElements[2].value,
          newVal: editElements[3].value
        }
        console.log(editData);
        // Send data to server
        fetch("/fx/indiupdate", {
          method: "POST",
          headers: {'Content-Type': 'application/json'},
          body: JSON.stringify(editData)
        }).then(res => res.json())
        .then(res => {
          console.log(res);
          // Update indicator window
          //updateIndiWindowData(res.indiData);
        })
        .catch(err => {
          console.log(err);
        });
      } catch(err) {
        console.log(err);
      }
    });
  }
  //------------------------

  //------------------------
  // Data chart
  //------------------------
  function updateChart(indicatorCode,data) {

    if (data == undefined) {
      try {
        document.getElementById('indicatorChart').innerHTML = '<p class="text-secondary">Chưa có dữ liệu</p>';
      } catch(err) {
        console.log(err);
      }
      //console.log('Chưa có dữ liệu');
    } else {
      console.log(data);
      let chartData = [];
      for(var i=1; i<data.length;i++) {
        chartData.push({
          label: data[i][0],
          y: parseFloat(data[i][1])
        });
      }
      try {
        var chart = new CanvasJS.Chart("indicatorChart",
            {
                animationEnabled: true,
                backgroundColor: "rgba(0,0,0,0)",
                axisX: {
                  labelFormatter: function (e) {
                    return CanvasJS.formatDate( e.label, "DD/MM/YYYY");
                  },
                  labelFontColor: "white"
                },
                axisY: {
                    includeZero: false
                },
                axisY2: {
                  title: "",
                  titleFontColor: "white",
                  labelFontColor: "white"
                },
                legend: {
                  fontColor: "white"
                },
                toolTip: {
                  contentFormatter: function (e) {
                    var content = " ";
                    for (var i = 0; i < e.entries.length; i++) {
                      content += "<span style='color:" + e.chart.selectedColorSet[i] + ";'>" + CanvasJS.formatDate(e.entries[i].dataPoint.label, "DD/MM/YYYY") + "</span>" + ": " + e.entries[i].dataPoint.y.toFixed(2) + '';
                      content += "<br/>";
                    }
                    return content;
                  }
                },
                data: [{
                  type:"line",
                  axisYType: "secondary",
                  name: indicatorCode,
                  showInLegend: true,
                  markerSize: 0,
                  yValueFormatString: "0.00",
                  dataPoints: chartData
                }]
            });
        chart.render();
      } catch(err) {
        console.log(err);
      }
    }
  }
  //------------------------
</script>

</html>
