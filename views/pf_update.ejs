<!DOCTYPE html>
<html lang="en">
<%- include('head.ejs',{page_name:'Trang quản lý'}) %>
<body>
  <%- include('hotStyles.ejs') %>
  <!-- Loader -->
  <div id="loading">
    <img id="loading-image" src="/img/Gordon.gif" alt="Loading..." />
  </div>
  <!-- HEADER BEGIN -->
  <%- include('menus/headerMenu.ejs',{user}) %>
  <!-- HEADER END -->
  <div class="d-flex align-items-stretch">
    <nav id="sidebar">
      <%- include('menus/menu.ejs',{device:'pc'}) %>
    </nav>
    <div class="page-content" style="padding-bottom:70px;">
      <div class="page-header">
        <div class="container-fluid">
          <h2 class="h5 no-margin-bottom">Cập nhật danh mục khách hàng</h2>
        </div>
      </div>

      <section>
        <div class="container-fluid">
          <div class="row" id="fetch-results">

          </div>
        </div>
      </section>


    </div>
  </div>
</body>
<%- include ('tail.ejs') %>
<script src="/js/favico.min.js"></script>
<script src="/js/custom-script.js"></script>
<script src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>
<!-- Sheet -->
<script>
  let SHEET_ID = '1BSXJVLWeoEZe0c1UnP58tAHXUbbWrobLLq0oTWv3xKg';
  let SHEET_TITLE = 'GDKH';
  let SHEET_RANGE = 'A:L';

  //let FULL_URL = 'https://docs.google.com/spreadsheets/d/' + SHEET_ID + '/gviz/tq?sheet=' + SHEET_TITLE + "&range=" + SHEET_RANGE;
  let FULL_URL = 'https://docs.google.com/spreadsheets/d/1BSXJVLWeoEZe0c1UnP58tAHXUbbWrobLLq0oTWv3xKg/gviz/tq?sheet=GDKH_new&range=A:O';
  //console.log(FULL_URL);
  fetch(FULL_URL)
    .then(res => res.text())
    .then(res => {
      //console.log(res);
      const data = JSON.parse(res.substr(47).slice(0,-2));
      //console.log(data);
      const values = data.table.rows;
      let data2 = [];
      let pointer=0;
      console.log(values);
      let clientObj = {};
      for (var i=0; i<values.length-1; i++) {
        if (values[i].c[0] != null && values[i+1].c[0] == null) {
          // client info
          let row = values[i].c;
          let acc = cellVal(row[0], 'string');
          let company = cellVal(row[1], 'string').toUpperCase();
          let name = cellVal(row[2], 'string');
          let phone = cellVal(row[3], 'string');
          let email = cellVal(row[4], 'string');
          let net_value = cellVal(row[5], 'int')/1000000000;
          let portfolio_value = cellVal(row[6], 'int')/1000000000;
          let cash_value = cellVal(row[7], 'int')/1000000000;
          let debt = cellVal(row[9], 'int')/1000000000;

          clientObj.acc = acc;
          clientObj.company = company;
          clientObj.name = name;
          clientObj.phone = phone;
          clientObj.email = email;
          clientObj.net_value = net_value;
          clientObj.portfolio_value = portfolio_value;
          clientObj.cash_value = cash_value;
          clientObj.debt = debt;
          clientObj.portfolio = [];

        } else  if (values[i].c[0] == null && values[i+1].c[0] == null) {
          let row = values[i].c;
          if (row[0]==null) {
            if (row[10] != null) {
              let buyprice = 0;
              let currentprice = 0;
              if(row[12]!=null && row[12].v) {
                if(row[12].v!=null) buyprice = row[12].v;
              } else console.log('Row ' + i + "[12]: error"  );

              if(row[13]!=null && row[13].v) {
                  if(row[13].v!=null) currentprice = row[13].v;
              } else console.log('Row ' + i + "[13]: error"  );
              clientObj.portfolio.push({
                ticker:row[10].v,
                vol:row[11].v,
                buyprice:buyprice,
                currentprice:currentprice,
              });
            }
          }
        } else if (values[i].c[0] == null && values[i+1].c[0] != null) {
          data2.push(clientObj);
          clientObj = {};
        }
        /*
        // Old sheet
        const row = values[i].c;
        if (row[0].v == 'SỐ TK') {
          //console.log(row);
          let phone = '';

          if(row.length==12) phone=row[11].v;
          else phone='';

          let tsrong = 0;
          let cash = 0;
          let debt = 0;

          let acc = '';
          if (row[1] != null) acc = row[1].f;

          let company = '';
          if (row[2] != null) company = row[2].toUpperCase();

          try {
            if(row.length>=7 && row[7] != null){
              tsrong = row[7].v/1000000000;
            }
            else tsrong = 0;
          }
          catch(err) {
            console.log(err);
            //console.log(i,row);
          }
          try {
            if(row.length>=9 && row[9] != null){
              cash = row[9].v/1000000000;
            }
            else cash = 0;
          }
          catch(err) {
            console.log(err);
            //console.log(i,row);
          }

          data2.push({
            acc:acc,
            company:company,
            phone:phone,
            net_value:tsrong,
            portfolio_value: 0,
            cash_value:cash,
            debt:debt,
            portfolio:[]
            });
        } else if (row[0].v=='HỌ VÀ TÊN') {
          //console.log(row);
          let tstt = 0;
          if(row[7] != null) tstt = row[7].v/1000000000;
          data2[data2.length-1].portfolio_value = tstt;
          //email
          if(row.length==12 && row[11]!=null) {
            if (row[11].v) {
              if (row[11].v!=null) {
                data2[data2.length-1].email = row[11].v.toLowerCase();
              }
            }
          } else data2[data2.length-1].email = '';
          //name
          if(row[5]!=null) {
            if (row[5].v) {
              if (row[5].v!=null) {
                data2[data2.length-1].name = row[5].v;
              }
            }
          } else data2[data2.length-1].name = '';
        } else if (row[0].v=='Chi tiết giao dịch') {
          //console.log(row);
          let debt = 0;
          if(row[9]!=null) {
            if (row[9].v) {
              if (row[9].v!=null) {
                debt = row[9].v/1000000000;
              }
            }
          }
          data2[data2.length-1].debt = debt;
        } else if (row[0].v=='Mã') {
          pointer = i;
        } else if (row[0].v!='' && row[0].v.length<10 && i>pointer) {
        //  console.log(row);

          let buyprice = 0;
          let currentprice = 0;
          if(row[2].v!=null) buyprice = row[2].v;
          if(row[3].v!=null) currentprice = row[3].v;
          data2[data2.length-1].portfolio.push({
            ticker:row[0].v,
            vol:row[1].v,
            buyprice:buyprice,
            currentprice:currentprice,
          });
        }*/
      }
      console.log(data2);

      for(var i=0;i<data2.length;i++) {
        fetch("/securities/pf-update", {
          method: "POST",
          headers: {'Content-Type': 'application/json'},
          body: JSON.stringify(data2[i])
        }).then(res => res.json())
          .then(res => {
            let fr = document.getElementById('fetch-results');
            let frcol = document.createElement("div");
            frcol.classList.add('col-12');
            let frblock = document.createElement("div");
            frblock.classList.add('block');
            let frblockcontent = document.createElement("div");
            frblockcontent.classList.add('block-content');
            let frName = document.createElement("p");
            frName.innerHTML = 'Họ và tên: ' + res.inputParams.name;
            let frPhone = document.createElement("p");
            frPhone.innerHTML = 'Điện thoại: ' + res.inputParams.phone;
            let frEmail = document.createElement("p");
            frEmail.innerHTML = 'Email: ' + res.inputParams.email;
            let frAcc = document.createElement("p");
            frAcc.innerHTML = 'Số TK: ' + res.inputParams.acc;
            let frCompany = document.createElement("p");
            frCompany.innerHTML = 'Công ty: ' + res.inputParams.company;
            let frMsg = document.createElement("p");

            frMsg.innerHTML = res.message;
            fr.appendChild(frcol);
            frcol.appendChild(frblock);
            frblock.appendChild(frblockcontent);
            frblockcontent.appendChild(frMsg);
            frblockcontent.appendChild(frName);
            frblockcontent.appendChild(frPhone);
            frblockcontent.appendChild(frEmail);
            frblockcontent.appendChild(frAcc);
            frblockcontent.appendChild(frCompany);


            switch(res.errorCode) {
              case 0:
                frMsg.classList.remove("text-danger");
                frMsg.classList.add('text-success');
                break;
              case 1:
                frMsg.classList.remove("text-success");
                frMsg.classList.add('text-danger');
                break;
              default:
                console.log(res);
            }
          })
          .catch(err => console.log(err));
      }
    })
    .catch(err => console.log(err));

    function cellVal(cell, format) {
      if (cell != null) {
        if (format=='string') {
          if(cell.v) return('' + cell.v);
          else return('');
        }
        if (format=='int') {
          if (typeof(cell.v)=='number') return(parseInt(cell.v));
          if (typeof(cell.v)=='string') return(parseInt(cell.v.replace(/[^\w\s]/gi, '')));
        }
        if (format=='float') {
          if (typeof(cell.v)=='number') return(parseFloat(cell.v));
          if (typeof(cell.v)=='string') return(parseFloat(cell.v.replace(/[^\w\s]/gi, '')));
        }
      } else {
        if (format=='string') return('');
        if (format=='int') return(0);
        if (format=='float') return(0.0);
      }
    }
</script>
<!--script>
  // UPDATE FUND'S PF
  var prices = [];

  var records = [];  //time,direction,ticker,vol,pct,price,avg_cost,profit
  var trades = [];
  var initCap = 10;
  var portfolio = [{ticker:'Tiền mặt',amount:initCap*1000,equity:initCap,price:0.001}];  //ticker,amount,equity,price

  let fundpf = [];
  let moneyIn = 0;
  let moneyOut = 0;
  for(var i=0; i<trades.length; i++){
    if(trades[i].order_direction=='buy'){
      // Buy order
      if(fundpf.length==0){
        // Portfolio is empty
        fundpf.push({ticker:trades[i].ticker.toUpperCase(),vol:trades[i].vol,buyprice:trades[i].price, currentprice:0});  // {ticker: 'PXS', vol: 64000, buyprice: 9.503, currentprice: 4.43}
        moneyOut += trades[i].vol * trades[i].price;
      } else {
        // Portfolio has stocks in it
        let tickerFound=0;
        for(var j=0; j<fundpf.length; j++){
          if(trades[i].ticker.toUpperCase()==fundpf[j].ticker){
            tickerFound++;
            fundpf[j].buyprice = (fundpf[j].buyprice * fundpf[j].vol + trades[i].price * trades[i].vol) / (fundpf[j].vol + trades[i].vol);
            fundpf[j].vol += trades[i].vol;
            moneyOut += trades[i].vol * trades[i].price;
          }
        }
        if(tickerFound==0){
          // Add ticker to portfolio
          fundpf.push({ticker:trades[i].ticker.toUpperCase(),vol:trades[i].vol,buyprice:trades[i].price, currentprice:0});
          moneyOut += trades[i].vol * trades[i].price;
        }
      }
    } else {
      // Sell order
      if(fundpf.length>0){
        for(var j=0; j<fundpf.length; j++){
          if(trades[i].ticker.toUpperCase()==fundpf[j].ticker){
            // This ticker is in portfolio
            if(trades[i].pct==null){
              if(trades[i].vol >= fundpf[j].vol) {
                fundpf[j].vol = 0;
                moneyIn += trades[i].vol * trades[i].price;
              } else {
                fundpf[j].vol -= trades[i].vol;
                moneyIn += trades[i].vol * trades[i].price;
              }
            } else {
              let sellAmount = trades[i].pct*fundpf[j].vol/100;
              if(sellAmount >= fundpf[j].vol) {
                fundpf[j].vol = 0;
                moneyIn += trades[i].vol * trades[i].price;
              } else {
                fundpf[j].vol -= trades[i].vol;
                moneyIn += trades[i].vol * trades[i].price;
              }
            }
          }
        }
      }
    }
  }

  let pfCash = initCap + moneyIn - moneyOut;
  let pfValue = 0;
  // Update price
  for(var i=0; i<fundpf.length; i++) {
    for(var j=0; j<prices.length; j++) {
      if(fundpf[i].ticker == prices[j][0]) {
        fundpf[i].currentprice = parseFloat(prices[j][2]);
        pfValue += fundpf[i].currentprice * fundpf[i].vol;
      }
    }
    fundpf[i].vol *= 1000000;
  }
  console.log("fund's pf: ");
  console.log(fundpf);
  console.log("fund's cash: ", pfCash);
  console.log("fund's value: ", pfValue);


  // Create Pf object then push to data2 array
  // Result: {ticker: 'PXS', vol: 64000, buyprice: 9.503, currentprice: 4.43}
  // Source: [{"ticker":"Tiền mặt","amount":8616,"equity":8.616,"price":0.001},{"ticker":"BSR","amount":0.01,"equity":0.273,"price":32.2},{"ticker":"GMD","amount":0.02,"equity":1.16,"price":58}]


  /*for (var i=0; i<portfolio.length; i++) {
    if(portfolio[i].ticker != 'Tiền mặt') {
      // Console.log('do smth here')
    }
  }*/

  // UPDATE CLIENTS PF
  let data = <%- JSON.stringify(data.values) %>;
  //console.log(data);

  let data2 = [];
  let pointer=0;
  for(var i=0; i<data.length;i++) {
    if(data[i][0]=='SỐ TK') {

      let phone = '';

      if(data[i].length==12) phone=data[i][11];
      else phone='';

      let tsrong = 0;
      let cash = 0;
      let debt = 0;
      try {
        if(data[i].length>=7){
          if(!isNaN(parseFloat(data[i][7].replace(/,/g, '')))) tsrong = parseFloat(data[i][7].replace(/,/g, ''))/1000000000;
        }
        else tsrong = 0;
      }
      catch(err) {
        console.log(err);
        console.log(i,data[i]);
      }
      try {
        if(data[i].length>=9){
          if(!isNaN(parseFloat(data[i][9].replace(/,/g, '')))) cash = parseFloat(data[i][9].replace(/,/g, ''))/1000000000;
        }
        else cash = 0;
      }
      catch(err) {
        console.log(err);
        console.log(i,data[i]);
      }

      data2.push({
        acc:data[i][1],
        company:data[i][2].toUpperCase(),
        phone:phone,
        net_value:tsrong,
        portfolio_value: 0,
        cash_value:cash,
        debt:debt,
        portfolio:[]
        });
    } else if (data[i][0]=='HỌ VÀ TÊN') {
      let tstt = 0;
      if(!isNaN(parseFloat(data[i][7].replace(/,/g, '')))) tstt = parseFloat(data[i][7].replace(/,/g, ''))/1000000000;
      data2[data2.length-1].portfolio_value = tstt;
      if(data[i].length==12)
        data2[data2.length-1].email = data[i][11].toLowerCase();
      else
        data2[data2.length-1].email = '';
      data2[data2.length-1].name = data[i][1];
    } else if (data[i][0]=='Chi tiết giao dịch' && data[i].length==10) {
      let debt = 0;
      if(!isNaN(parseFloat(data[i][9].replace(/,/g, '')))) debt = parseFloat(data[i][9].replace(/,/g, ''))/1000000000;
      if(!debt) debt=0;
      data2[data2.length-1].debt = debt;
    } else if (data[i][0]=='Mã') {
      pointer = i;
    } else if (data[i][0]!='' && data[i][0].length<10 && i>pointer) {
      let buyprice = 0;
      let currentprice = 0;
      if(parseFloat(data[i][2].replace(/,/g, ''))) buyprice = parseFloat(data[i][2].replace(/,/g, ''));
      if(parseFloat(data[i][3].replace(/,/g, ''))) currentprice = parseFloat(data[i][3].replace(/,/g, ''));
      data2[data2.length-1].portfolio.push({
        ticker:data[i][0],
        vol:parseInt(data[i][1].replace(/,/g, '')),
        buyprice:buyprice,
        currentprice:currentprice,
      });
    }
  }

  // Add fundpf to data2
  data2.push({
    acc: "0",
    cash_value: pfCash,
    company: "",
    debt: 0,
    email: "",
    name: "",
    net_value: pfValue + pfCash,
    phone: "",
    portfolio: fundpf,
    portfolio_value: pfValue
  });
  console.log(data2);
  for(var i=0;i<data2.length;i++) {
    fetch("/securities/pf-update", {
      method: "POST",
      headers: {'Content-Type': 'application/json'},
      body: JSON.stringify(data2[i])
    }).then(res => res.json())
      .then(res => {
        let fr = document.getElementById('fetch-results');
        let frcol = document.createElement("div");
        frcol.classList.add('col-12');
        let frblock = document.createElement("div");
        frblock.classList.add('block');
        let frblockcontent = document.createElement("div");
        frblockcontent.classList.add('block-content');
        let frName = document.createElement("p");
        frName.innerHTML = 'Họ và tên: ' + res.inputParams.name;
        let frPhone = document.createElement("p");
        frPhone.innerHTML = 'Điện thoại: ' + res.inputParams.phone;
        let frEmail = document.createElement("p");
        frEmail.innerHTML = 'Email: ' + res.inputParams.email;
        let frAcc = document.createElement("p");
        frAcc.innerHTML = 'Số TK: ' + res.inputParams.acc;
        let frCompany = document.createElement("p");
        frCompany.innerHTML = 'Công ty: ' + res.inputParams.company;
        let frMsg = document.createElement("p");

        frMsg.innerHTML = res.message;
        fr.appendChild(frcol);
        frcol.appendChild(frblock);
        frblock.appendChild(frblockcontent);
        frblockcontent.appendChild(frMsg);
        frblockcontent.appendChild(frName);
        frblockcontent.appendChild(frPhone);
        frblockcontent.appendChild(frEmail);
        frblockcontent.appendChild(frAcc);
        frblockcontent.appendChild(frCompany);


        switch(res.errorCode) {
          case 0:
            frMsg.classList.remove("text-danger");
            frMsg.classList.add('text-success');
            break;
          case 1:
            frMsg.classList.remove("text-success");
            frMsg.classList.add('text-danger');
            break;
          default:
            console.log(res);
        }
      })
      .catch(err => console.log(err));
  }
</script-->
</html>
